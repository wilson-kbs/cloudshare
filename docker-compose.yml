version: "3.8"
services:
  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - MONGO_INITDB_USERNAME=$MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD=$MONGO_INITDB_PASSWORD
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    ports:
      - "27017:27017"
    volumes:
      - "./database/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro"
      - "${STORAGE_PATH}/database:/data/db"
      - "dev-database_config:/data/configdb"
    networks:
      default:
        aliases:
          - $MONGO_HOSTNAME

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=$MONGO_HOSTNAME
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_INITDB_ROOT_USERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    depends_on:
      - mongo

  reverse-proxy:
    image: traefik:v2.2
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker
      - --entrypoints.web.address=:80
      # - --entrypoints.web-secure.address=:443
    restart: unless-stopped
    ports:
      - $LISTEN_PORT:80
      # - $LISTEN_PORT_SSL:443
      - $DASHBORD_LISTEN_PORT:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  front:
    image: "node:14.15.3-buster"
    restart: unless-stopped
    command: npm run serve
    volumes:
      - "./frontend:/usr/src/app"
    working_dir: /usr/src/app
    ports:
      - "8080"
    environment:
      - TZ=Europe/Paris
      - VUE_APP_API_TITLE=$TITLE_APP
      - VUE_APP_API_BASEPATH=$API_BASEPATH
      - VUE_APP_API_URL=$API_URL
    labels:
      # - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
    depends_on:
      - metadata-service
      - files-service

  metadata-service:
    build:
      context: services/meta
      target: dev
    restart: unless-stopped
    depends_on:
      - mongo
    volumes:
      - "./services/meta:/usr/src/app:rw"
      - "dev_meta-srv_node_modules:/usr/src/app/node_modules"
    working_dir: /usr/src/app
    ports:
      - $METADATA_SERVICES_API_PORT
      - $GRPC_DEFAULT_LISTEN_PORT
    environment:
      - TZ=Europe/Paris
      - CHOKIDAR_USEPOLLING=true
      - MONGO_DB=$MONGO_DB
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_INITDB_USERNAME=$MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD=$MONGO_INITDB_PASSWORD
      - CLOUDSHARE_WEB_BASEPATH=$API_BASEPATH
      - CLOUDSHARE_WEB_PORT=$METADATA_SERVICES_API_PORT
      - CLOUDSHARE_FILES_MANAGER_ADDRESS=$FILES_SERVICES_HOSTNAME
      - CLOUDSHARE_JWT_SECRET=$JWT_SECRET
      - GRPC_LISTEN_PORT=$GRPC_DEFAULT_LISTEN_PORT
    labels:
      # - "traefik.http.routers.meta-srv.tls=true"
      - "traefik.http.routers.meta-srv.rule=PathPrefix(`${API_BASEPATH}/upload`, `${API_BASEPATH}/meta`, `${API_BASEPATH}/auth`)"
      - "traefik.http.services.meta-srv.loadbalancer.server.port=3000"
    networks:
      default:
        aliases:
          - $METADATA_SERVICES_HOSTNAME

  files-service:
    build:
      context: services/files
      target: dev
    restart: unless-stopped
    command: air -c .air.toml
    volumes:
      - "./services/files:/usr/src/app"
      - "${STORAGE_PATH}:/data"
    working_dir: /usr/src/app
    ports:
      - $FILES_SERVICES_API_PORT
      - $GRPC_DEFAULT_LISTEN_PORT
    environment:
      - TZ=Europe/Paris
      - CLOUDSHARE_GRPC_META_SERVICE_URL=$METADATA_SERVICES_HOSTNAME:$GRPC_DEFAULT_LISTEN_PORT
      - CLOUDSHARE_WEB_BASE_PATH=$API_BASEPATH
      - CLOUDSHARE_WEB_FRONT_URL=$WEB_URL
    labels:
      # - "traefik.http.routers.files-srv.tls=true"
      - "traefik.http.routers.files-srv.rule=PathPrefix(`${API_BASEPATH}/d`, `${API_BASEPATH}/cache`)"
      - "traefik.http.services.files-srv.loadbalancer.server.port=3000"
    networks:
      default:
        aliases:
          - $FILES_SERVICES_HOSTNAME

volumes:
  dev_meta-srv_node_modules:
  dev-database_config:
