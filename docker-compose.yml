version: "3.8"
services:
  mongo:
    image: mongo
    restart: always
    privileged: true
    environment:
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - MONGO_INITDB_USERNAME=$MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD=$MONGO_INITDB_PASSWORD
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    ports:
      - "27017:27017"
    volumes:
      - "./config/mongo/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro"
      - "${STORAGE_PATH}/database:/data/db"
    networks:
      default:
        aliases:
          - $MONGO_HOSTNAME

  mongo-express:
    image: mongo-express
    profiles: ["dev"]
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=$MONGO_HOSTNAME
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_INITDB_ROOT_USERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    depends_on:
      - mongo

  reverse-proxy:
    image: traefik:v2.2
    command: --api.insecure=true --api.dashboard=true --providers.docker
    privileged: true
    ports:
      - $LISTEN_PORT:80
      - $DASHBORD_LISTEN_PORT:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  web-ui:
    image: "node:14.15.3-buster"
    profiles: ["dev"]
    restart: unless-stopped
    command: npm run serve
    volumes:
      - "./web-ui:/usr/src/app"
    working_dir: /usr/src/app
    ports:
      - "8080"
    environment:
      - TZ=Europe/Paris
      - VUE_APP_API_BASEPATH=$API_BASEPATH
    labels:
      - "traefik.http.routers.web_ui.rule=PathPrefix(`/`)"
      - "traefik.http.services.web_ui.loadbalancer.server.port=8080"
    depends_on:
      - metadata-service
      - files-service

  metadata-service:
    build: services/metadata
    profiles: ["dev"]
    restart: unless-stopped
    depends_on:
      - mongo
    volumes:
      - "./services/metadata:/usr/src/app:rw"
    working_dir: /usr/src/app
    ports:
      - $METADATA_SERVICES_API_PORT
      - $GRPC_DEFAULT_LISTEN_PORT
    environment:
      - TZ=Europe/Paris
      - CHOKIDAR_USEPOLLING=true
      - MONGO_DB=$MONGO_DB
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_INITDB_USERNAME=$MONGO_INITDB_USERNAME
      - MONGO_INITDB_PASSWORD=$MONGO_INITDB_PASSWORD
      - CLOUDSHARE_WEB_BASEPATH=$API_BASEPATH
      - CLOUDSHARE_WEB_PORT=$METADATA_SERVICES_API_PORT
      - CLOUDSHARE_FILES_MANAGER_ADDRESS=$FILES_SERVICES_HOSTNAME
      - GRPC_LISTEN_PORT=$GRPC_DEFAULT_LISTEN_PORT
    labels:
      - "traefik.http.routers.${METADATA_SERVICES_HOSTNAME}.rule=PathPrefix(`${API_BASEPATH}/upload`, `${API_BASEPATH}/meta`, `${API_BASEPATH}/auth`)"
      - "traefik.http.services.${METADATA_SERVICES_HOSTNAME}.loadbalancer.server.port=3000"
    networks:
      default:
        aliases:
          - $METADATA_SERVICES_HOSTNAME

  files-service:
    build: services/files
    profiles: ["dev"]
    restart: unless-stopped
    command: air -c .air.toml
    volumes:
      - "./services/files:/usr/src/app"
      - "${STORAGE_PATH}:/data"
    working_dir: /usr/src/app
    ports:
      - $FILES_SERVICES_API_PORT
      - $GRPC_DEFAULT_LISTEN_PORT
    environment:
      - TZ=Europe/Paris
      - CLOUDSHARE_GRPC_META_SERVICE_URL=$METADATA_SERVICES_HOSTNAME:$GRPC_DEFAULT_LISTEN_PORT
      - CLOUDSHARE_WEB_BASE_PATH=$API_BASEPATH
    labels:
      - "traefik.http.routers.${FILES_SERVICES_HOSTNAME}.rule=PathPrefix(`${API_BASEPATH}/d`, `${API_BASEPATH}/cache`)"
      - "traefik.http.services.${FILES_SERVICES_HOSTNAME}.loadbalancer.server.port=3000"
    networks:
      default:
        aliases:
          - $FILES_SERVICES_HOSTNAME
